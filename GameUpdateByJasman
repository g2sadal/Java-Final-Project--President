import java.util.List;
import java.util.ArrayList;

public class Game 
{
	private boolean firstGame;
    private int currentTurn;
    private Card[] deck;
    private List<Card> discard;
    private List<Card> pile;

    /**
     * Constructor for objects of class Game
     */
    public Game()
    {
        firstGame = true;
        deck = new Card[52]; 
        discard = new ArrayList<Card>();
        pile = new ArrayList<Card>(); 
        
        int value = 3;
        
        while(value < 16)
        {
        	for(int i = 0; i < deck.length; i += 13)
        	{
        		deck[i] = new Card("Diamond", value);
        	}
        	value++;
        }
        
        for(int j = 0; j < deck.length; j++)
        {
        	if(j < 14)
        	{
        		deck[j].setSuit("Hearts");
        	}
        	else if(j < 27)
        	{
        		deck[j].setSuit("Clubs");
        	}
        	else if(j < 40)
        	{
        		deck[j].setSuit("Spades");
        	}
        }
    }
    
    JButton btnCompilation = new JButton("Completion");
	btnCompilation.addMouseListener(new MouseAdapter() {
		public void mouseClicked(MouseEvent arg) 
		{
			if(btnCompilation.equals("Completion"))
			{
				
			}
				
		}
		
		public boolean complete()
		{
			int countPile = 0;
			
			int countPlayerHand = 0;
			
			int total = 0;
			
			Card currentCard = pile[pile.length-1];
			for( int i = pile.length; i > pile.length - 4; i--)
			{
				if(currentCard == pile[i-1])
				{
					countPile += 1;
				}
			}
			
			
			
			if (countPile!= 0) 
			{
				for( int i = 0; i < hand.size(); i++)
				{
					if(hand.get(i).equals(currentCard))
					{
						countPlayerHand +=1
					}
				}
				total = countPlayerHand + countPile;
				
				if(total != 4)
				{
					return false
				}
				
				return true;
			}
		}
		
    public void shuffle()
    {
    	for(int i = 0; i < deck.length; i++)
    	{
    		int index = (int)(Math.random() * deck.length);
    		Card temp = deck[i];
    		deck[i] = deck[index];
    		deck[index] = temp;	
    	}
    }
    
    public void completeHand()
    {
    	
    }
    public void print()
    {
    	for(int i = 0; i < deck.length; i++)
    	{
    		System.out.print(deck[i].toString());
    	}
    	
    	shuffle();
    	
    	for(int i = 0; i < deck.length; i++)
    	{
    		System.out.println(deck[i].toString());
    	}
    }
    	
}
