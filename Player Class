 

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.List;
import java.util.ArrayList;

public class Player extends Thread
{
    private List<Card> hand;
    private int rank;
    private List<Card> play;
    Socket socket;
    BufferedReader input;
    PrintWriter output;
    
    private Player (List<Card> h, int r, Socket s)
    {
        hand = h;
        rank = r;
        socket = s;
        try
        {
            input = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            output.println("Welcome Player" + rank);
            output.println("Waiting for other players");
        }
        catch(IOException e)
        {
            System.out.println("No players");
        }
    }
    
    public void run()
    {
        try
        {
            output.println("All players connected");
            
            if(rank == 1)
                //enable player's buttons
            
            while(true)
            {
                String command = input.readLine();
                if(command.startsWith("MOVE"))
                {
                    command = command.substring(6);
                    List<Card> move = new ArrayList<Card>();
                    int suit, rank;
                    for(int i=0; i<command.length(); i+=2)
                    {
                        suit = Integer.parseInt(command.substring(i, i+1));
                        rank = Integer.parseInt(command.substring(i+1, i+2));
                        move.add(new Card(suit, rank));
                    }
                    if(validMove(move))
                        output.println("Player " + rank + "played " + moveString(move));
                    if(handCompleted())
                        output.println("Player " + rank + "is done");
                        
                }
                
            }
        }
        catch(IOException e)
        {
            System.out.println("Game Over");
        }
        finally
        {
            try
            {
                socket.close();
            }
            catch(IOException e)
            {
            }
        }
    }
    
    public void selectCard(/*card index sent from display/game */int i)
    {  
        play.add(hand.remove(i));
    }
    
    public List<Card> playCard(/*card index sent from display/game */int i)
    {
        return play;
    }

    public void setRank(int r)
    {
        rank = r;
    }
    
}
