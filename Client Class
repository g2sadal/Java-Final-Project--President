import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.Socket;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import java.util.List;
import java.util.ArrayList;
import javax.swing.JFrame;
import java.awt.EventQueue;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.GridLayout;
import java.awt.Image;

import javax.swing.JPanel;
import javax.swing.JTextPane;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JScrollBar;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.Color;
import javax.swing.JToggleButton;

public class Client
{
    private static int PORT = 8901;
    private Socket socket;
    private BufferedReader in;
    private PrintWriter out;
    private int rank;
    private List<Card> hand;
    private JButton btnNewButton = new  JButton("New button");   
    private JButton button = new JButton("New button");  
    private JButton button_1 = new JButton("New button");
    private JButton button_2 = new JButton("New button");
    private JButton button_3 = new JButton("New button");
    private JButton button_4 = new JButton("New button");
    private JButton button_5 = new JButton("New button");
    private JButton button_6 = new JButton("New button");
    private JButton button_7 = new JButton("New button");
    private JButton button_8 = new JButton("New button");
    private JButton button_9 = new JButton("New button");
    private JButton button_10 = new JButton("New button");
    private JButton button_11 = new JButton("New button");
    private JButton btnCompletion = new JButton("Completion");
    private JButton btnPass = new JButton("Pass");
    private JButton btnMakeMove = new JButton("Make Move");
    
    
    
    public Client(String serverAddress) throws Exception
    {
        socket = new Socket(serverAddress, PORT);
        in = new BufferedReader(new InputStreamReader(socket.getInputStream()));
        out = new PrintWriter(socket.getOutputStream(), true);
        
        JFrame frame = new JFrame();
        frame.getContentPane().setBackground(new Color(0, 100, 0));
        frame.setBounds(100, 100, 667, 455);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.getContentPane().setLayout(null);
        

        btnNewButton.setBounds(6, 206, 46, 76);
        frame.getContentPane().add(btnNewButton);
        

        button.setBounds(52, 206, 49, 76);
        frame.getContentPane().add(button);
        
        
        button_1.setBounds(98, 206, 49, 76);
        frame.getContentPane().add(button_1);
        
        
        button_2.setBounds(146, 206, 49, 76);
        frame.getContentPane().add(button_2);
        
        
        button_3.setBounds(196, 206, 49, 76);
        frame.getContentPane().add(button_3);
        
 
        button_4.setBounds(247, 206, 49, 76);
        frame.getContentPane().add(button_4);
        

        button_5.setBounds(296, 206, 49, 76);
        frame.getContentPane().add(button_5);
        

        button_6.setBounds(344, 206, 49, 76);
        frame.getContentPane().add(button_6);
        
        button_7.setBounds(394, 206, 49, 76);
        frame.getContentPane().add(button_7);
        

        button_8.setBounds(445, 206, 49, 76);
        frame.getContentPane().add(button_8);
        

        button_9.setBounds(493, 206, 49, 76);
        frame.getContentPane().add(button_9);
        
 
        button_10.setBounds(543, 206, 49, 76);
        frame.getContentPane().add(button_10);
        

        button_11.setBounds(595, 206, 49, 76);
        frame.getContentPane().add(button_11);
        
        
        btnCompletion.setBounds(517, 51, 100, 23);
        frame.getContentPane().add(btnCompletion);
        
        
        btnPass.setBounds(517, 85, 100, 23);
        frame.getContentPane().add(btnPass);
        
        
        btnMakeMove.setBounds(517, 119, 100, 23);
        frame.getContentPane().add(btnMakeMove);
        
        JLabel label = new JLabel("New label");
        Image x= new ImageIcon(this.getClass().getResource("/CardBack.png")).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT); 
        label.setIcon(new ImageIcon(x));
        label.setBounds(10, 30, 105, 145);
        frame.getContentPane().add(label);
        
        JLabel label_1 = new JLabel("New label");
        Image y= new ImageIcon(this.getClass().getResource("/CardBack.png")).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT); 
        label_1.setIcon(new ImageIcon(y));
        label_1.setBounds(146, 30, 105, 145);
        frame.getContentPane().add(label_1);
        
        JLabel label_2 = new JLabel("New label");
        Image z= new ImageIcon(this.getClass().getResource("/CardBack.png")).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT);
        label_2.setIcon(new ImageIcon(z));
        label_2.setBounds(285, 30, 105, 145);
        frame.getContentPane().add(label_2);

        
        
    }
    
    public void play() throws Exception
    {
        String response = "";
        try
        {
            response = in.readLine();
            if(response.startsWith("WELCOME"))
            {
                rank = Integer.parseInt(response.substring(15,17));
                response = response.substring(33);
                
                Image z= new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                btnNewButton.setIcon(new ImageIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" "))))); 
                response = response.substring(response.indexOf(" ") + 1);
                
                z =  new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button1.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button2.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button3.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button4.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button5.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button6.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button7.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button8.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button9.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button10.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring(response.indexOf(" ") + 1);
                
                z = new ImageIcon(this.getClass().getResource(response.substring(0, response.indexOf(" ")))).getImage().getScaledInstance(6, 206, Image.SCALE_DEFAULT);
                button11.setIcon(new ImagaeIcon(z));
                hand.add(new Card(response.charAt(0), Integer.parseInt(response.substring(1, response.indexOf(" ")))));
                response = response.substring   (response.indexOf(" ") + 1);

                
            
            }
            while (true)
            {
                response = in.readLine();
                if(response.startsWith("VALID_MOVE"))
                {
                    response= response.substring(28);
                    if(response.length()>8)
                    {
                        Image x= new ImageIcon(this.getClass().getResource(response.substring(0, indexOf(" "))).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT)); 
                        label_2.setIcon(new ImageIcon(x));
                        response = response.substring(response.substring(indexOf(" ")+1));
                        
                        x = new ImageIcon(this.getClass().getResource(response.substring(0, indexOf(" "))).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT)); 
                        label_1.setIcon(new ImageIcon(x));
                        response = response.substring(response.substring(indexOf(" ")+1));
                        
                        x = new ImageIcon(this.getClass().getResource(response.substring(0, indexOf(" "))).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT)); 
                        label.setIcon(new ImageIcon(x));
                        response = response.substring(response.substring(indexOf(" ")+1));
                    }
                    else if(response.length()>4)
                    {
                        label.setIcon(label_2.getIcon());
                        
                        Image x= new ImageIcon(this.getClass().getResource(response.substring(0, indexOf(" "))).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT)); 
                        label_2.setIcon(new ImageIcon(x));
                        response = response.substring(response.substring(indexOf(" ")+1));
                        
                        x = new ImageIcon(this.getClass().getResource(response.substring(0, indexOf(" "))).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT)); 
                        label_1.setIcon(new ImageIcon(x));
                        response = response.substring(response.substring(indexOf(" ")+1));
                    }
                    else
                    {
                        label.setIcon(label_1.getIcon());
                        label_1.setIcon(label_2.getIcon());
                        
                        x = new ImageIcon(this.getClass().getResource(response.substring(0, indexOf(" "))).getImage().getScaledInstance(105, 145, Image.SCALE_DEFAULT)); 
                        label_2.setIcon(new ImageIcon(x));
                        response = response.substring(response.substring(indexOf(" ")+1));
                    }
                }

            }
        }
        finally
        {
            socket.close();
        }
     }
     btnMakeMove.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e)
			{
			    String output = "";
    	for(int i = 0; i < cards.size(); i++)
    	{
    		 output += cards.get(i).toString() + " ";
    	}
    	
			    out.println("MOVE " + output);
			}
			
			btnCompletion.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e){
				    String output = "";
    	for(int i = 0; i < cards.size(); i++)
    	{
    		 output += cards.get(i).toString() + " ";
    	}
    	
			    out.println("COMPLETION " + output);
			}
			btnPass.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) 
			{
			    out.println("PASS");
			}
			public static void main(String[] args) throws Exception
			{
			    while(true)
			    {
			        String serverAddress;
			        if(args.length == 0)
			         serverAddress = "localhost";
			        else
			         args[1];
			         
			        Client client = new Client(serverAddress);
			        client.play();
			    }
			}
		
    }
