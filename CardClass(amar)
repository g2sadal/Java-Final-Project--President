import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;



public class Card implements Comparable<Card>
{
	private String suit;
    private int value;
    private BufferedImage cardImage;
    
    //1 is diamonds
    //2 is clubs
    //3 is spades
    //4 is hearts
   public void main(String[] args) throws IOException
   {
	   Card Clubs10 = new Card("Clubs", 10, ImageIO.read(new File("10_of_clubs.png")));
	   Card Diamonds10 = new Card("Diamonds", 10, ImageIO.read(new File("10_of_diamonds.png")));
	   Card Spades10 = new Card("Spades", 10, ImageIO.read(new File("10_of_spades.png")));
	   Card Hearts10 = new Card("Hearts", 10, ImageIO.read(new File("10_of_hearts.png")));
	   
	   
	   Card Clubs2 = new Card("Clubs", 2, ImageIO.read(new File("2_of_clubs.png")));
	   Card Diamonds2 = new Card("Diamonds", 10, ImageIO.read(new File("2_of_diamonds.png")));
	   Card Spades2 = new Card("Spades", 2, ImageIO.read(new File("2_of_spades.png")));
	   Card Hearts2 = new Card("Hearts", 2, ImageIO.read(new File("2_of_hearts.png")));
	   
	   Card Clubs3 = new Card("Clubs", 3, ImageIO.read(new File("3_of_clubs.png")));
	   Card Diamonds3 = new Card("Diamonds", 3, ImageIO.read(new File("3_of_diamonds.png")));
	   Card Spades3 = new Card("Spades", 3, ImageIO.read(new File("3_of_spades.png")));
	   Card Hearts3 = new Card("Hearts", 3, ImageIO.read(new File("3_of_hearts.png")));
	    
	   Card Clubs4 = new Card("Clubs", 4, ImageIO.read(new File("4_of_clubs.png")));
	   Card Diamonds4 = new Card("Diamonds", 4, ImageIO.read(new File("4_of_diamonds.png")));
	   Card Spades4 = new Card("Spades", 4, ImageIO.read(new File("4_of_spades.png")));
	   Card Hearts4 = new Card("Hearts", 3, ImageIO.read(new File("4_of_hearts.png")));
	   
	   Card Clubs5 = new Card("Clubs", 5, ImageIO.read(new File("5_of_clubs.png")));
	   Card Diamonds5 = new Card("Diamonds", 5, ImageIO.read(new File("5_of_diamonds.png")));
	   Card Spades5 = new Card("Spades", 5, ImageIO.read(new File("5_of_spades.png")));
	   Card Hearts5 = new Card("Hearts", 5, ImageIO.read(new File("5_of_hearts.png")));
	   

	   Card Clubs6 = new Card("Clubs", 6, ImageIO.read(new File("6_of_clubs.png")));
	   Card Diamonds6 = new Card("Diamonds", 6, ImageIO.read(new File("6_of_diamonds.png")));
	   Card Spades6 = new Card("Spades", 6, ImageIO.read(new File("6_of_spades.png")));
	   Card Hearts6 = new Card("Hearts", 6, ImageIO.read(new File("6_of_hearts.png")));
	   

	   Card Clubs7 = new Card("Clubs", 7, ImageIO.read(new File("7_of_clubs.png")));
	   Card Diamonds7 = new Card("Diamonds", 7, ImageIO.read(new File("7_of_diamonds.png")));
	   Card Spades7 = new Card("Spades", 7, ImageIO.read(new File("7_of_spades.png")));
	   Card Hearts7 = new Card("Hearts", 7, ImageIO.read(new File("7_of_hearts.png")));
	   
	   Card Clubs8 = new Card("Clubs", 8, ImageIO.read(new File("7_of_clubs.png")));
	   Card Diamonds8 = new Card("Diamonds", 8, ImageIO.read(new File("7_of_diamonds.png")));
	   Card Spades8 = new Card("Spades", 8, ImageIO.read(new File("7_of_spades.png")));
	   Card Hearts8 = new Card("Hearts", 8, ImageIO.read(new File("7_of_hearts.png")));
	   
	   Card Clubs9 = new Card("Clubs", 9, ImageIO.read(new File("7_of_clubs.png")));
	   Card Diamonds9 = new Card("Diamonds", 9, ImageIO.read(new File("7_of_diamonds.png")));
	   Card Spades9 = new Card("Spades", 9, ImageIO.read(new File("7_of_spades.png")));
	   Card Hearts9 = new Card("Hearts", 9, ImageIO.read(new File("7_of_hearts.png")));
	   
	   Card ClubsAce = new Card("Clubs", 14, ImageIO.read(new File("ace_of_clubs.png")));
	   Card DiamondsAce = new Card("Diamonds", 14, ImageIO.read(new File("ace_of_diamonds.png")));
	   Card SpadesAce = new Card("Spades", 14, ImageIO.read(new File("ace_of_spades.png")));
	   Card HeartsAce = new Card("Hearts", 14, ImageIO.read(new File("ace_of_hearts.png")));
	   
	   Card ClubsJack = new Card("Clubs", 11, ImageIO.read(new File("jack_of_clubs.png")));
	   Card DiamondsJack = new Card("Diamonds", 11, ImageIO.read(new File("jack_of_diamonds.png")));
	   Card SpadesJack = new Card("Spades", 11, ImageIO.read(new File("jack_of_spades.png")));
	   Card HeartsJack = new Card("Hearts", 11, ImageIO.read(new File("jack_of_hearts.png")));
	   
	   Card ClubsKing = new Card("Clubs", 13, ImageIO.read(new File("king_of_clubs.png")));
	   Card DiamondsKing = new Card("Diamonds", 13, ImageIO.read(new File("king_of_diamonds.png")));
	   Card SpadesKing = new Card("Spades", 13, ImageIO.read(new File("king_of_spades.png")));
	   Card HeartsKing = new Card("Hearts", 13, ImageIO.read(new File("king_of_hearts.png")));
	   
	   Card ClubsQueen = new Card("Clubs", 12, ImageIO.read(new File("king_of_clubs.png")));
	   Card DiamondsQueen = new Card("Diamonds", 12, ImageIO.read(new File("king_of_diamonds.png")));
	   Card SpadesQueen = new Card("Spades", 12, ImageIO.read(new File("king_of_spades.png")));
	   Card HeartsQueen = new Card("Hearts", 12, ImageIO.read(new File("king_of_hearts.png")));
	   
	  
   }
   
    public Card(String mySuit, int myNumber, BufferedImage Card)
    {
        suit = mySuit;
        value = myNumber;
        cardImage = Card;
    }
    
    public String getSuit()
    {
        return suit;
    }
    
    public int getValue()
    {
        return value;
    }
    
    public int setValue(int number)
    {
    	value = number;
    	return value;
    }
    
    public String setSuit(String type)
    {
    	suit = type;
    	return suit;
    }
    
    
    
    public int compareTo(Card other)
    {
        if(getValue() > ((Card)other).getValue())
            return 1;
        else if( getValue() == ((Card)other).getValue())
            return 0;
        else 
            return -1;
    }
    
    public String toString(Card card)
    {
    	return suit + " " + value; 
    }
}
