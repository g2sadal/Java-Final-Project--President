

import java.net.ServerSocket;





public class Server

{

   public static void main (String[] args) throws Exception

   {

       ServerSocket listener = new ServerSocket(2222);

       System.out.println("Server is running");

       try

       {

           while(true)

           {

               Game game = new Game();

               Player player1 = new Player(listener.accept(), 1);

               Player player2 = new Player(listener.accept(), 2);

               Player player3 = new Player(listener.accept(), 3);

               Player player4 = new Player(listener.accept(), 4);

               game.deal(player1, player2, player3, player4);

               player1.start();

               player2.start();

               player3.start();

               player4.start();

              

                   if(player1.returnMove())

                   {

                        game.makeMove(player1.getPlay());

                   }

                   if(player2.returnMove())

                   {

                        game.makeMove(player2.getPlay());

                   }

                   if(player3.returnMove())

                   {

                        game.makeMove(player3.getPlay());

                   }

                   if(player4.returnMove())

                   {

                        game.makeMove(player4.getPlay());

                   }

                   

                   if(player1.returnComplete())

                   {

                        game.canComplete(player1.getPlay());

                   }

                   if(player2.returnComplete())

                   {

                        game.canComplete(player2.getPlay());

                   }

                   if(player3.returnComplete())

                   {

                        game.canComplete(player3.getPlay());

                   }

                   if(player4.returnComplete())

                   {

                        game.canComplete(player4.getPlay());

                   }

                   

                   if(player1.returnPass())

                   {

                        game.pass();

                   }

                   if(player2.returnPass())

                   {

                        game.pass();

                   }

                   if(player3.returnPass())

                   {

                        game.pass();

                   }

                   if(player4.returnPass())

                   {

                        game.pass();

                   }

               }

           

       }

       finally

       { listener.close();}

   }

}
